import { useEffect, useState } from 'react';
import { API_CONFIG } from './api-config.js';

export interface NetworkConfig {
  apiBaseUrl: string;
  isLocal: boolean;
  networkAddress?: string;
}

/**
 * Gets the appropriate API base URL based on the environment
 * @param customUrl - Optional custom URL to override auto-detection
 * @returns The API base URL to use
 */
export function getApiBaseUrl(customUrl?: string): string {
  if (customUrl) {
    return customUrl;
  }

  // Check if we're in a Tauri environment
  if (typeof window !== 'undefined' && '__TAURI__' in window) {
    // Use the API_CONFIG which is generated by the mobile dev scripts
    return API_CONFIG.baseUrl;
  }
  
  // Also check Vite environment variable as fallback
  // @ts-ignore - Vite will replace this at build time
  if (typeof import.meta !== 'undefined' && import.meta.env?.VITE_API_HOST) {
    // @ts-ignore
    return `http://${import.meta.env.VITE_API_HOST}:3000`;
  }

  // For web app in production, use relative URLs
  if (typeof window !== 'undefined' && 
      window.location.hostname !== 'localhost' && 
      window.location.hostname !== '127.0.0.1') {
    return '';
  }

  // Default to localhost for development
  return 'http://localhost:3000';
}

/**
 * React hook to get and manage the API base URL
 * @param customUrl - Optional custom URL to override auto-detection
 * @returns NetworkConfig object with the API URL and network info
 */
export function useApiConfig(customUrl?: string): NetworkConfig {
  const [config, setConfig] = useState<NetworkConfig>(() => ({
    apiBaseUrl: getApiBaseUrl(customUrl),
    isLocal: true,
  }));

  useEffect(() => {
    const url = getApiBaseUrl(customUrl);
    const isLocal = url.includes('localhost') || url.includes('127.0.0.1');
    
    setConfig({
      apiBaseUrl: url,
      isLocal,
      networkAddress: !isLocal ? new URL(url).hostname : undefined,
    });
  }, [customUrl]);

  return config;
}

/**
 * Instructions for setting up network access for mobile development:
 * 
 * 1. Find your computer's IP address:
 *    - macOS: System Preferences > Network > Your connection > IP address
 *    - Windows: ipconfig in Command Prompt
 *    - Linux: ip addr or ifconfig
 * 
 * 2. Set the environment variable before running the native app:
 *    - VITE_API_HOST=192.168.1.100 pnpm tauri dev
 *    - Or add to .env file: VITE_API_HOST=192.168.1.100
 * 
 * 3. Ensure your backend (web app) is accessible on the network:
 *    - The backend should be running on 0.0.0.0:3000 not just localhost:3000
 *    - Check firewall settings if connection fails
 */